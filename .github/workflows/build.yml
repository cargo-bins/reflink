name: Build

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - target: x86_64-apple-darwin
            os: macos-latest
          - target: aarch64-apple-darwin
            os: macos-latest
          - target: x86_64-pc-windows-msvc
            os: windows-latest
          - target: x86_64-unknown-linux-musl
            os: ubuntu-latest
          - target: armv7-unknown-linux-musleabihf
            os: ubuntu-20.04
            use-cross: true
          - target: armv7-unknown-linux-gnueabihf
            os: ubuntu-20.04
            use-cross: true
          - target: aarch64-unknown-linux-musl
            os: ubuntu-latest
            use-cross: true
          - target: aarch64-unknown-linux-gnu
            os: ubuntu-latest
            use-cross: true

    runs-on: ${{ matrix.os }}
    name: ${{ matrix.target }}

    steps:
    - uses: actions/checkout@v4

    - name: Install cross
      if: matrix.use-cross
      uses: taiki-e/install-action@v2
      with:
        tool: cross

    - name: Install host target
      if: "!matrix.use-cross"
      run: rustup target add ${{ matrix.target }}

    - name: Install musl-tools
      if: ${{ matrix.target == 'x86_64-unknown-linux-musl' }}
      run: sudo apt-get update && sudo apt-get install -y musl-tools

    - uses: Swatinem/rust-cache@v2

    - name: Test
      if: ${{ !matrix.use-cross && matrix.target != 'aarch64-apple-darwin' }}
      run: cargo test --target ${{ matrix.target }}

    - name: Test using cross
      if: "matrix.use-cross"
      run: cross test --target ${{ matrix.target }}

    - name: Build for aarch64-apple-darwin
      if: ${{ matrix.target == 'aarch64-apple-darwin' }}
      run: cargo build --target ${{ matrix.target }}

  check:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
    - uses: Swatinem/rust-cache@v2

    - name: Clipppy
      run: cargo clippy --no-deps

    - name: Format
      run: cargo fmt --all --check
